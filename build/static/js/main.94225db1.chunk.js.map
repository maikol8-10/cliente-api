{"version":3,"sources":["context/CRMContext.js","componentes/layout/Header.js","componentes/layout/Navegacion.js","config/axios.js","componentes/clientes/Cliente.js","componentes/layout/Spinner.js","componentes/clientes/Clientes.js","componentes/clientes/NuevoCliente.js","componentes/clientes/EditarCliente.js","componentes/productos/Producto.js","componentes/productos/Productos.js","componentes/productos/EditarProducto.js","componentes/productos/NuevoProducto.js","componentes/pedidos/DetallesPedido.js","componentes/pedidos/Pedidos.js","componentes/pedidos/FormBuscarProducto.js","componentes/pedidos/FormCantidadProducto.js","componentes/pedidos/NuevoPedido.js","componentes/auth/Login.js","App.js","reportWebVitals.js","index.js"],"names":["CRMContext","React","createContext","CRMProvider","props","useState","token","auth","guardarAuth","Provider","value","children","Header","navigate","useNavigate","useContext","className","type","onClick","localStorage","setItem","Navegacion","to","clienteAxios","axios","create","baseURL","process","Cliente","cliente","_id","nombre","apellido","empresa","email","telefono","idCliente","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","delete","res","data","mensaje","Spinner","Clientes","clientes","guardarClientes","useEffect","consultarAPI","a","get","headers","Authorization","clientesConsulta","response","status","length","map","NuevoCliente","guardarCliente","actualizarState","e","target","name","onSubmit","preventDefault","post","code","placeholder","onChange","disabled","validarCliente","EditarCliente","id","useParams","consultarApi","clienteConsulta","datosCliente","put","Producto","producto","precio","imagen","src","Productos","productos","guardarProductos","productosConsulta","EditarProducto","guardarProducto","archivo","guardarArchivo","productoConsulta","editarProducto","formData","FormData","append","console","log","leerInformacionProducto","defaultValue","min","step","alt","width","files","NuevoProducto","agregarProducto","DetallesPedido","pedido","articulos","cantidad","total","href","Pedidos","pedidos","guardarPedidos","resultado","FormBuscarProducto","buscarProducto","leerDatosBusqueda","FormCantidadProducto","restarProductos","aumentarProductos","eliminaProductoPedido","index","busqueda","guardarBusqueda","guardarTotal","actualizarTotal","resultadoBusqueda","productoResultado","i","todosProductos","filter","nuevoTotal","realizarPedido","Login","credenciales","guardarCredenciales","iniciarSesion","respuesta","leerDatos","required","App","exact","path","element","NuevoPedido","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94225db1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst CRMContext = React.createContext([{}, () => { }]); //Recibe Objeto y Funcion\n\nconst CRMProvider = props => {\n\n    //Definir el state inicial\n    //auth: Objeto\n    //guardarToken: Funcion\n    const [auth, guardarAuth] = useState({\n        token: '',\n        auth: false\n    });\n\n    return (\n        <CRMContext.Provider value={[auth, guardarAuth]}>\n            {props.children}\n        </CRMContext.Provider>\n    );\n}\n\nexport { CRMContext, CRMProvider };","import React, { useContext } from 'react';\n\nimport { CRMContext } from '../../context/CRMContext';\nimport { useNavigate } from 'react-router-dom';\n\nconst Header = () => {\n\n    const navigate = useNavigate();\n\n    //Utilizar valores del Context\n    const [auth, guardarAuth] = useContext(CRMContext);\n\n    const cerrarSesion = () => {\n        //auth.auth= false y el token se remueve\n        guardarAuth({\n            token: '',\n            auth: false\n        });\n\n        localStorage.setItem('token', '');\n        navigate('/iniciar-sesion')\n    };\n\n    return (\n        <header className=\"barra\">\n            <div className=\"contenedor\">\n                <div className=\"contenido-barra\">\n                    <h1>CRM - Administrador de Clientes</h1>\n\n                    {auth.auth ? (\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-rojo\"\n                            onClick={cerrarSesion}>\n                            <i className=\"far fa-times-circle\"></i>\n                            Cerrar sesión\n                        </button>\n                    ) : null}\n\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React, { useContext } from 'react';\nimport { CRMContext } from '../../context/CRMContext';\n\n/**Routing */\nimport { Link } from 'react-router-dom';\n\nconst Navegacion = () => {\n\n    //Utilizar valores del Context\n    const [auth, guardarAuth] = useContext(CRMContext);\n\n    if (!auth.auth) return null; //Validar login para mostrar o no el menu\n\n    return (\n        <aside className=\"sidebar col-3\">\n            <h2>Administración</h2>\n\n            <nav className=\"navegacion\">\n                <Link to={\"/\"} className=\"clientes\">Clientes</Link>\n                <Link to={\"/productos\"} className=\"productos\">Productos</Link>\n                <Link to={\"/pedidos\"} className=\"pedidos\">Pedidos</Link>\n            </nav>\n        </aside>\n    );\n}\n\nexport default Navegacion;","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport clienteAxios from '../../config/axios';\n\n//const Cliente = (props) => {\nconst Cliente = ({ cliente }) => {\n    //console.log(cliente.nombre);\n\n    //Extraer los valores\n    const { _id, nombre, apellido, empresa, email, telefono } = cliente;\n\n    //Eliminar cliente \n    const eliminarCliente = idCliente =>{\n        Swal.fire({\n            title: 'Estas seguro?',\n            text: \"Un cliente eliminado no se puede recuperar!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, eliminar!',\n            cancelButtonText: 'Cancelar'\n          }).then((result) => {\n            if (result.isConfirmed) {\n                //Llamado a Axios\n                clienteAxios.delete(`/clientes/${idCliente}`)\n                .then(res =>{\n                    Swal.fire(\n                        'Eliminado!',\n                        res.data.mensaje,\n                        'success'\n                      );\n                })\n            }\n          })\n    }\n    return (\n        <li className=\"cliente\">\n            <div className=\"info-cliente\">\n                <p className=\"nombre\">{nombre} {apellido}</p>\n                <p className=\"empresa\">{empresa}</p>\n                <p>{email}</p>\n                <p>{telefono}</p>\n            </div>\n            <div className=\"acciones\">\n                <Link to={`/clientes/editar/${_id}`} className=\"btn btn-azul\">\n                    <i className=\"fas fa-pen-alt\"></i>\n                    Editar Cliente\n                </Link>\n\n                <Link to={`/pedidos/nuevo/${_id}`} className=\"btn btn-amarillo\">\n                    <i className=\"fas fa-plus\"></i>\n                    Nuevo Pedido\n                </Link>\n\n                <button type=\"button\" className=\"btn btn-rojo btn-eliminar\" onClick={()=> eliminarCliente(_id)}>\n                    <i className=\"fas fa-times\"></i>\n                    Eliminar Cliente\n                </button>\n            </div>\n        </li>\n    );\n}\n\nexport default Cliente;\n","import React from \"react\";\nimport './Spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"sk-circle\">\n      <div className=\"sk-circle1 sk-child\"></div>\n      <div className=\"sk-circle2 sk-child\"></div>\n      <div className=\"sk-circle3 sk-child\"></div>\n      <div className=\"sk-circle4 sk-child\"></div>\n      <div className=\"sk-circle5 sk-child\"></div>\n      <div className=\"sk-circle6 sk-child\"></div>\n      <div className=\"sk-circle7 sk-child\"></div>\n      <div className=\"sk-circle8 sk-child\"></div>\n      <div className=\"sk-circle9 sk-child\"></div>\n      <div className=\"sk-circle10 sk-child\"></div>\n      <div className=\"sk-circle11 sk-child\"></div>\n      <div className=\"sk-circle12 sk-child\"></div>\n    </div> \n  );\n};\n\nexport default Spinner;\n","import React, { useEffect, useState, Fragment, useContext } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\n/**Import Cliente Axios */\nimport clienteAxios from '../../config/axios';\n\nimport Cliente from './Cliente';\nimport Spinner from \"../layout/Spinner\";\n\n//Importar el context\nimport { CRMContext } from '../../context/CRMContext';\n\nconst Clientes = () => {\n\n    const navigate = useNavigate();\n\n    /**Trabajar con useState*/\n    //clientes=state, guardarClientes = funcion para guardar el state\n    const [clientes, guardarClientes] = useState([]);\n\n    //Utilizar valores del Context\n    const [auth, guardarAuth] = useContext(CRMContext);\n\n\n\n    //useEffect es similar a componentDidMount y componentWillMount\n    useEffect(() => {\n        if (auth.token !== '') { //Verifica si el token no está vacio\n\n            /**Query a la API*/\n            const consultarAPI = async () => {\n                try {\n                    const clientesConsulta = await clienteAxios.get('/clientes', {\n                        headers: {\n                            Authorization: `Bearer ${auth.token}`\n                        }\n                    });\n                    //Colocar el resultado en el state\n                    guardarClientes(clientesConsulta.data);\n                } catch (error) {\n                    //Error con la autorización\n                    if (error.response.status == 500) {\n                        navigate(\"/iniciar-sesion\");\n                    }\n                }\n            };\n\n            consultarAPI();\n        } else {\n            navigate(\"/iniciar-sesion\");\n        }\n    }, [clientes]);\n\n    //Si el state está como false\n    /*if (!auth.auth) { //Se pone antes del spinner para que no lo muestre y valide antes el login\n        console.log(\"Entrooooo\")\n        navigate(\"/iniciar-sesion\");\n    }*/\n\n    if (!clientes.length) return <Spinner></Spinner>\n\n    return (\n        <Fragment>\n            <h2>Clientes</h2>\n\n            <Link to={\"/clientes/nuevo\"} className=\"btn btn-verde nvo-cliente\"> <i className=\"fas fa-plus-circle\"></i>\n                Nuevo Cliente\n            </Link>\n\n            <ul className=\"listado-clientes\">\n                {clientes.map(cliente => (\n                    <Cliente\n                        key={cliente._id}\n                        cliente={cliente}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default Clientes;","import React, { Fragment, useState,useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport clienteAxios from '../../config/axios';\nimport Swal from 'sweetalert2';\n\n//Importar el context\nimport { CRMContext } from '../../context/CRMContext';\n\nconst NuevoCliente = () => {\n    //Se utiliza para el redireccionamiento entre views\n    const navigate = useNavigate();\n\n    //cliente= state, guardarCliente= funcion para guardar el state\n    const [cliente, guardarCliente] = useState({\n        nombre: '',\n        apellido: '',\n        email: '',\n        empresa: '',\n        telefono: ''\n    });\n\n     //Utilizar valores del Context\n     const [auth, guardarAuth] = useContext(CRMContext);\n\n     useEffect(() => {\n        //Verificar si el usuario está verificado o no\n        if (!auth.auth) {\n          navigate(\"/iniciar-sesion\");\n        }\n      }, []);\n\n    const actualizarState = e => {\n        //Almacenar lo que el usuario escribe\n        guardarCliente({\n            //Obtener una copia del state actual\n            ...cliente,\n            [e.target.name]: e.target.value\n        });\n\n        //console.log(cliente)\n    };\n\n    //Validar Formulario\n    const validarCliente = () => {\n        //Destructuring\n        const { nombre, apellido, email, empresa, telefono } = cliente;\n\n        //Revisar que las propiedades del state tengan contenido\n        let valido = !nombre.length || !apellido.length || !email.length || !empresa.length || !telefono.length;\n\n        //return true o false\n        return valido;\n\n    }\n\n    //Añade en la REST API un cliente nuevo\n    const agregarCliente = e => {\n        e.preventDefault();\n\n        //Enviar petición a Axios\n        clienteAxios.post('/clientes', cliente).then(res => {\n            //console.log(res);\n            //Validar si hay errores en Mongoose\n            if (res.data.code === 11000) {\n                Swal.fire({\n                    type: 'error',\n                    title: 'Hubo un error!',\n                    text: 'Este cliente ya está registrado',\n                })\n            } else {\n                Swal.fire(\n                    'Se agregó el Cliente!',\n                    res.data.mensaje,\n                    'success'\n                )\n                //console.log(res.data);\n            }\n\n            //Redirecci(onar\n            navigate('/');\n        });\n    }\n\n    //Verificar si el usuario está verificado o no\n    if (!auth.auth) {\n        navigate('/iniciar-sesion');\n    }\n\n    \n    return (\n\n        <Fragment>\n            <h2>Nuevo Cliente</h2>\n\n            <form onSubmit={agregarCliente}>\n                <legend>Llena todos los campos</legend>\n\n                <div className=\"campo\">\n                    <label>Nombre:</label>\n                    <input type=\"text\"\n                        placeholder=\"Nombre Cliente\"\n                        name=\"nombre\"\n                        onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Apellido:</label>\n                    <input type=\"text\"\n                        placeholder=\"Apellido Cliente\"\n                        name=\"apellido\"\n                        onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Empresa:</label>\n                    <input type=\"text\"\n                        placeholder=\"Empresa Cliente\"\n                        name=\"empresa\"\n                        onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Email:</label>\n                    <input type=\"email\"\n                        placeholder=\"Email Cliente\"\n                        name=\"email\"\n                        onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Teléfono:</label>\n                    <input type=\"number\"\n                        placeholder=\"Teléfono Cliente\"\n                        name=\"telefono\"\n                        onChange={actualizarState}\n                    />\n                </div>\n\n                <div className=\"enviar\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-azul\"\n                        value=\"Agregar Cliente\"\n                        disabled={validarCliente()}\n\n                    />\n                </div>\n\n            </form>\n        </Fragment >\n    );\n}\n\n//HOC, es una funcion que toma un componente y retorna un nuevo componente\n//export default withRouter(NuevoCliente);\nexport default NuevoCliente;","import React, { Fragment, useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport clienteAxios from '../../config/axios';\nimport Swal from 'sweetalert2';\n\nconst EditarCliente = (props) => {\n    //Se utiliza para el redireccionamiento entre views\n    const navigate = useNavigate();\n    //Obtener el ID\n    const { id } = useParams();\n\n    //Query a la API\n    const consultarApi = async () => {\n        const clienteConsulta = await clienteAxios.get(`/clientes/${id}`);\n\n        //Colocar en el state\n        datosCliente(clienteConsulta.data);\n    }\n\n    //useEffect, cuando el componente carga\n    useEffect(() => {\n        consultarApi();\n    }, []);\n\n    //const navigate = useNavigate();\n    //cliente= state, guardarCliente= funcion para guardar el state\n    const [cliente, datosCliente] = useState({\n        nombre: '',\n        apellido: '',\n        email: '',\n        empresa: '',\n        telefono: ''\n    });\n\n    const actualizarState = e => {\n        //Almacenar lo que el usuario escribe\n        datosCliente({\n            //Obtener una copia del state actual\n            ...cliente,\n            [e.target.name]: e.target.value\n        });\n\n        //console.log(cliente)\n    };\n\n    //Envía una petición por axios para actualizar el cliente\n    const actualizarCliente = e => {\n        e.preventDefault();\n        //Enviar peticición por axios\n        clienteAxios.put(`/clientes/${cliente._id}`, cliente)\n        .then(res=>{\n\n            //Validar si hay errores en Mongoose\n            if (res.data.code === 11000) {\n                Swal.fire({\n                    type: 'error',\n                    title: 'Hubo un error!',\n                    text: 'Este cliente ya está registrado',\n                })\n            } else {\n                Swal.fire(\n                    'Correcto',\n                    'Se actualizó corectamente!',\n                    'success'\n                )\n                //console.log(res.data);\n            }\n            //Redireccionar\n            navigate('/');\n        })\n    }\n\n    //Validar Formulario\n    const validarCliente = () => {\n        //Destructuring\n        const { nombre, apellido, email, empresa, telefono } = cliente;\n\n        //Revisar que las propiedades del state tengan contenido\n        let valido = !nombre.length || !apellido.length || !email.length || !empresa.length || !telefono.length;\n\n        //return true o false\n        return valido;\n\n    }\n\n\n\n    return (\n        <Fragment>\n            <h2>Editar Cliente</h2>\n\n            <form onSubmit={actualizarCliente}>\n                <legend>Llena todos los campos</legend>\n\n                <div className=\"campo\">\n                    <label>Nombre:</label>\n                    <input type=\"text\"\n                        placeholder=\"Nombre Cliente\"\n                        name=\"nombre\"\n                        onChange={actualizarState}\n                        value={cliente.nombre}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Apellido:</label>\n                    <input type=\"text\"\n                        placeholder=\"Apellido Cliente\"\n                        name=\"apellido\"\n                        onChange={actualizarState}\n                        value={cliente.apellido}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Empresa:</label>\n                    <input type=\"text\"\n                        placeholder=\"Empresa Cliente\"\n                        name=\"empresa\"\n                        onChange={actualizarState}\n                        value={cliente.empresa}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Email:</label>\n                    <input type=\"email\"\n                        placeholder=\"Email Cliente\"\n                        name=\"email\"\n                        onChange={actualizarState}\n                        value={cliente.email}\n                    />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Teléfono:</label>\n                    <input type=\"number\"\n                        placeholder=\"Teléfono Cliente\"\n                        name=\"telefono\"\n                        onChange={actualizarState}\n                        value={cliente.telefono}\n                    />\n                </div>\n\n                <div className=\"enviar\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-azul\"\n                        value=\"Guardar Cambios\"\n                        disabled={validarCliente()}\n\n                    />\n                </div>\n\n            </form>\n        </Fragment >\n    );\n}\n\n//HOC, es una funcion que toma un componente y retorna un nuevo componente\n//export default withRouter(NuevoCliente);\nexport default EditarCliente;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n/**Import Cliente Axios */\nimport clienteAxios from \"../../config/axios\";\n\nconst Producto = ({ producto }) => {\n  //Destructuring\n  const { _id, nombre, precio, imagen } = producto;\n\n  //Elimina un producto\n  const eliminarProducto = (id) => {\n    Swal.fire({\n      title: \"Estas seguro?\",\n      text: \"Un producto eliminado no se puede recuperar!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Si, eliminar!\",\n      cancelButtonText: \"Cancelar\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        //Llamado a Axios\n        clienteAxios.delete(`/productos/${id}`).then((res) => {\n            if (res.status===200) {\n                Swal.fire(\"Eliminado!\", res.data.mensaje, \"success\");\n            }\n        });\n      }\n    });\n  };\n\n  return (\n    <li className=\"producto\">\n      <div className=\"info-producto\">\n        <p className=\"nombre\">{nombre}</p>\n        <p className=\"precio\">$ {precio} </p>\n        {imagen ? <img src={`${process.env.REACT_APP_BACKEND_URL}/${imagen}`} /> : null}\n      </div>\n      <div className=\"acciones\">\n        <Link to={`/productos/editar/${_id}`} className=\"btn btn-azul\">\n          <i className=\"fas fa-pen-alt\"></i>\n          Editar Producto\n        </Link>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-rojo btn-eliminar\"\n          onClick={() => eliminarProducto(_id)}\n        >\n          <i className=\"fas fa-times\"></i>\n          Eliminar Producto\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Producto;\n","import React, { useEffect, useState, Fragment, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Producto from \"./Producto\";\n\n/**Import Cliente Axios */\nimport clienteAxios from \"../../config/axios\";\nimport Spinner from \"../layout/Spinner\";\n\n//Importar el context\nimport { CRMContext } from \"../../context/CRMContext\";\n\nconst Productos = () => {\n  const navigate = useNavigate();\n  //productos = state, guardarProductos = funcion para guardar el state\n  const [productos, guardarProductos] = useState([]);\n\n  //Utilizar valores del Context\n  const [auth, guardarAuth] = useContext(CRMContext);\n\n  //useEffect para consultar la API cuando cargue\n  useEffect(() => {\n    if (auth.token !== '') {\n      //Verifica si el token no está vacio\n      //Query a la API\n      const consultarAPI = async () => {\n        try {\n          const productosConsulta = await clienteAxios.get(\"/productos\", {\n            headers: {\n              Authorization: `Bearer ${auth.token}`,\n            },\n          });\n          guardarProductos(productosConsulta.data);\n        } catch (error) {\n          //Error con la autorización\n          if (error.response.status == 500) {\n            navigate(\"/iniciar-sesion\");\n          }\n        }\n      };\n\n      //Llamado a la API\n      consultarAPI();\n    } else {\n      navigate(\"/iniciar-sesion\");\n    }\n  }, [productos]);\n\n  //Si el state está como false\n  /*if (!auth.auth) {\n    //Se pone antes del spinner para que no lo muestre y valide antes el login\n    navigate(\"/iniciar-sesion\");\n  }*/\n\n  //Spinner de carga\n  if (!productos.length) return <Spinner></Spinner>;\n\n  return (\n    <Fragment>\n      <h2>Productos</h2>\n      <Link to={\"/productos/nuevo\"} className=\"btn btn-verde nvo-cliente\">\n        {\" \"}\n        <i className=\"fas fa-plus-circle\"></i>\n        Nuevo Producto\n      </Link>\n\n      <ul className=\"listado-productos\">\n        {productos.map((producto) => (\n          <Producto key={producto._id} producto={producto}></Producto>\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default Productos;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport clienteAxios from '../../config/axios';\nimport Swal from 'sweetalert2';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Spinner from \"../layout/Spinner\";\n\nconst EditarProducto = (props) => {\n\n    //Se utiliza para el redireccionamiento entre views\n    const navigate = useNavigate();\n\n    //Obtener el ID\n    const { id } = useParams();\n\n    //producto=state y funcion para actualizar\n    const [producto, guardarProducto] = useState({\n        nombre: '',\n        precio: '',\n        imagen: ''\n    });\n\n    //archivo=state, guardarArchivo=setState\n    const [archivo, guardarArchivo] = useState('');\n\n    //Consultar API para traer el producto a editar\n    const consultarApi = async () => {\n        const productoConsulta = await clienteAxios.get(`/productos/${id}`);\n        guardarProducto(productoConsulta.data);\n    };\n\n    //Cuando el componente carga\n    useEffect(() => {\n        consultarApi();\n    }, [])\n\n    //Edita un producto en la base de datos\n    const editarProducto = async e => {\n        e.preventDefault();\n\n        //Crear un formdata\n        const formData = new FormData();\n        formData.append('nombre', producto.nombre);\n        formData.append('precio', producto.precio);\n        formData.append('imagen', archivo);\n        //Almacenarlo en la base de datos\n        try {\n            const res = await clienteAxios.put(`/productos/${id}`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n            //Lanzar alerta\n            //console.log(res);\n            if (res.status === 200) {\n                Swal.fire(\n                    'Correcto',\n                    'Se actualizó corectamente!',\n                    'success'\n                )\n            }\n            //Redirecci(onar\n            navigate('/productos');\n        } catch (error) {\n            console.log(error);\n            //Lanzar alerta\n            Swal.fire({\n                type: 'error',\n                title: 'Hubo un error',\n                text: 'Vuelva a intentarlo'\n            })\n        }\n    }\n\n    //Leer datos del formulario \n    const leerInformacionProducto = e => {\n        guardarProducto({\n            //Obtener una copia del state y agregar el nuevo\n            ...producto,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    //Coloca la imagen en el state\n    const leerArchivo = e => {\n        guardarArchivo(e.target.files[0]);\n    }\n\n    //Extraer los valores de state\n    const { nombre, precio, imagen } = producto;\n\n    if (!nombre) return <Spinner></Spinner>\n\n\n    return (\n        <Fragment>\n            <h2>Editar Producto</h2>\n\n            <form onSubmit={editarProducto}>\n                <legend>Llena todos los campos</legend>\n\n                <div className=\"campo\">\n                    <label>Nombre:</label>\n                    <input type=\"text\"\n                        placeholder=\"Nombre Producto\"\n                        name=\"nombre\"\n                        onChange={leerInformacionProducto}\n                        defaultValue={nombre} />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Precio:</label>\n                    <input type=\"number\"\n                        name=\"precio\"\n                        min=\"0.00\"\n                        step=\"0.01\"\n                        placeholder=\"Precio\"\n                        onChange={leerInformacionProducto}\n                        defaultValue={precio} />\n                </div>\n\n                <div className=\"campo\">\n                    <label>Imagen:</label>\n                    {imagen ? (\n                        <img src={`${process.env.REACT_APP_BACKEND_URL}/${imagen}`} alt=\"imagen\" width=\"300\" />\n                    ) : null}\n                    <input type=\"file\"\n                        name=\"imagen\"\n                        onChange={leerArchivo} />\n                </div>\n\n                <div className=\"enviar\">\n                    <input type=\"submit\" className=\"btn btn-azul\" value=\"Editar Producto\" />\n                </div>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default EditarProducto;","import React, { useEffect, useState, Fragment, useContext } from \"react\";\nimport clienteAxios from \"../../config/axios\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Importar el context\nimport { CRMContext } from \"../../context/CRMContext\";\n\nconst NuevoProducto = () => {\n  //Se utiliza para el redireccionamiento entre views\n  const navigate = useNavigate();\n  //producto=state, guardarProducto=setState\n  const [producto, guardarProducto] = useState({\n    nombre: \"\",\n    precio: \"\",\n  });\n  //archivo=state, guardarArchivo=setState\n  const [archivo, guardarArchivo] = useState(\"\");\n\n  //Utilizar valores del Context\n  const [auth, guardarAuth] = useContext(CRMContext);\n\n  useEffect(() => {\n    //Verificar si el usuario está verificado o no\n    if (!auth.auth) {\n      navigate(\"/iniciar-sesion\");\n    }\n  }, []);\n\n  //Leer datos del formulario\n  const leerInformacionProducto = (e) => {\n    guardarProducto({\n      //Obtener una copia del state y agregar el nuevo\n      ...producto,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  //Coloca la imagen en el state\n  const leerArchivo = (e) => {\n    guardarArchivo(e.target.files[0]);\n  };\n  //Almacena el nuevo producto en la base de datos\n  const agregarProducto = async (e) => {\n    e.preventDefault();\n\n    //Crear un formdata\n    const formData = new FormData();\n    formData.append(\"nombre\", producto.nombre);\n    formData.append(\"precio\", producto.precio);\n    formData.append(\"imagen\", archivo);\n\n    //Almacenarlo en la base de datos\n    try {\n      const res = await clienteAxios.post(\"/productos\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      //Lanzar alerta\n      console.log(res);\n      if (res.status === 200) {\n        Swal.fire(\"Se agregó el Producto!\", res.data.mensaje, \"success\");\n      }\n      //Redireccionar\n      navigate(\"/productos\");\n    } catch (error) {\n      console.log(error);\n      //Lanzar alerta\n      Swal.fire({\n        type: \"error\",\n        title: \"Hubo un error\",\n        text: \"Vuelva a intentarlo\",\n      });\n    }\n  };\n\n  return (\n    <Fragment>\n      <h2>Nuevo Producto</h2>\n\n      <form onSubmit={agregarProducto}>\n        <legend>Llena todos los campos</legend>\n\n        <div className=\"campo\">\n          <label>Nombre:</label>\n          <input\n            type=\"text\"\n            placeholder=\"Nombre Producto\"\n            name=\"nombre\"\n            onChange={leerInformacionProducto}\n          />\n        </div>\n\n        <div className=\"campo\">\n          <label>Precio:</label>\n          <input\n            type=\"number\"\n            name=\"precio\"\n            min=\"0.00\"\n            step=\"0.01\"\n            placeholder=\"Precio\"\n            onChange={leerInformacionProducto}\n          />\n        </div>\n\n        <div className=\"campo\">\n          <label>Imagen:</label>\n          <input type=\"file\" name=\"imagen\" onChange={leerArchivo} />\n        </div>\n\n        <div className=\"enviar\">\n          <input\n            type=\"submit\"\n            className=\"btn btn-azul\"\n            value=\"Agregar Producto\"\n          />\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default NuevoProducto;\n","import React from 'react';\n\nconst DetallesPedido = ({ pedido }) => {\n\n    const { cliente } = pedido;\n    /*pedido.pedido.map(articulos => (\n       // console.log(articulos.producto._id)\n    ));*/\n\n    return (\n        <li className=\"pedido\">\n            <div className=\"info-pedido\">\n                <p className=\"id\">ID: 0192019201291201</p>\n                <p className=\"nombre\">Cliente: {cliente.nombre} {cliente.apellido}</p>\n\n                <div className=\"articulos-pedido\">\n                    <p className=\"productos\">Artículos Pedido: </p>\n                    <ul>\n                        {pedido.pedido.map(articulos => (\n                            <li key={pedido._id}>\n                                <p></p>\n                                <p>Precio: $ </p>\n                                <p>Cantidad: {articulos.cantidad}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <p className=\"total\">Total: ${pedido.total} </p>\n            </div>\n            <div className=\"acciones\">\n                <a href=\"#\" className=\"btn btn-azul\">\n                    <i className=\"fas fa-pen-alt\"></i>\n                    Editar Pedido\n                </a>\n\n                <button type=\"button\" className=\"btn btn-rojo btn-eliminar\">\n                    <i className=\"fas fa-times\"></i>\n                    Eliminar Pedido\n                </button>\n            </div>\n        </li>\n    )\n};\n\nexport default DetallesPedido;","import React, { useEffect, useState, Fragment } from 'react';\nimport clienteAxios from '../../config/axios';\nimport DetallesPedido from './DetallesPedido';\n\nconst Pedidos = () => {\n\n    const [pedidos, guardarPedidos] = useState([]);\n\n    useEffect(() => {\n        const consultarAPI = async () => {\n            //Obtener los pedidos\n            const resultado = await clienteAxios.get('/pedidos');\n            guardarPedidos(resultado.data);\n        }\n\n        consultarAPI();\n    }, [])\n\n    return (\n        <Fragment>\n            <h2>Pedidos</h2>\n\n            <ul className=\"listado-pedidos\">\n                {pedidos.map(pedido => (\n                    <DetallesPedido\n                        key={pedido._id}\n                        pedido={pedido}\n                    >\n\n                    </DetallesPedido>\n                ))}\n            </ul>\n        </Fragment>\n    );\n}\n\nexport default Pedidos;","import React from 'react';\n\n\nconst FormBuscarProducto = (props) => {\n\n    return (\n        <form onSubmit={props.buscarProducto}>\n            <legend>Busca un Producto y agrega una cantidad</legend>\n            <div className=\"campo\">\n                <label>Productos:</label>\n                <input type=\"text\" placeholder=\"Nombre Productos\" name=\"productos\"\n                    onChange={props.leerDatosBusqueda}\n                />\n            </div>\n            <input\n                type=\"submit\"\n                className=\"btn btn-azul btn-block\"\n                value=\"Buscar Producto\"\n            />\n        </form>\n    )\n};\n\nexport default FormBuscarProducto;","import React from 'react';\n\nconst FormCantidadProducto = (props) => {\n\n    const { producto, restarProductos, aumentarProductos, eliminaProductoPedido, index } = props;\n    return (\n        <li>\n            <div className=\"texto-producto\">\n                <p className=\"nombre\">{producto.nombre}</p>\n                <p className=\"precio\">${producto.precio}</p>\n            </div>\n            <div className=\"acciones\">\n                <div className=\"contenedor-cantidad\">\n                    <i\n                        className=\"fas fa-minus\"\n                        onClick={() => restarProductos(index)}\n                    ></i>\n\n                    <p>{producto.cantidad}</p>\n                    <i\n                        className=\"fas fa-plus\"\n                        onClick={() => aumentarProductos(index)}\n                    ></i>\n                </div>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-rojo\"\n                    onClick={() => eliminaProductoPedido(producto._id)} >\n                    <i className=\"fas fa-minus-circle\"></i>\n                    Eliminar Producto\n                </button>\n            </div>\n        </li>\n    )\n};\n\nexport default FormCantidadProducto;","import React, { useState, useEffect, Fragment } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport clienteAxios from '../../config/axios';\nimport Swal from 'sweetalert2';\n\nimport FormBuscarProducto from './FormBuscarProducto';\nimport FormCantidadProducto from './FormCantidadProducto';\n\nconst NuevoProducto = () => {\n\n    const navigate = useNavigate();\n    //Extraer ID del cliente\n    const { id } = useParams();\n\n    //state\n    const [cliente, guardarCliente] = useState({});\n    const [busqueda, guardarBusqueda] = useState('');\n    const [productos, guardarProductos] = useState([]);\n    const [total, guardarTotal] = useState(0);\n\n    useEffect(() => {\n        //Obtener cliente\n        const consultarApi = async () => {\n            //Obtener cliente\n            const clienteConsulta = await clienteAxios.get(`/clientes/${id}`);\n            guardarCliente(clienteConsulta.data);\n        };\n\n        //Llamar a la api\n        consultarApi();\n\n        //Actualizar el total a pagar\n        actualizarTotal();\n\n    }, [productos]);\n\n    const buscarProducto = async e => {\n        e.preventDefault();\n\n        //Obtener los productos de la busqueda\n        const resultadoBusqueda = await clienteAxios.post(`/productos/busqueda/${busqueda}`);\n\n        //Si no hay resultados alojar una alerta, caso contrario agregarlo al state\n        if (resultadoBusqueda.data[0]) {\n            let productoResultado = resultadoBusqueda.data[0];\n            //Agregar la llave producto (Copia de ID)\n            productoResultado.producto = resultadoBusqueda.data[0]._id;\n            productoResultado.cantidad = 0;\n\n            //Ponerlo en el state, pero primero se optiene una copia de los productos actuales\n            guardarProductos([...productos, productoResultado]);\n        } else {\n            //No hay resultados\n            Swal.fire({\n                type: 'error',\n                title: 'No hay resultados',\n                text: 'Vuelva a intentarlo'\n            })\n        }\n    }\n\n    //Almacenar una busqueda en el state\n    const leerDatosBusqueda = e => {\n        guardarBusqueda(e.target.value);\n    }\n\n    //Actualizar la cantidad de productos\n    const restarProductos = i => {\n        //Copiar el arreglo original de productos\n        const todosProductos = [...productos];\n        //Validar si está en 0, no puede ir mas allá\n        if (todosProductos[i].cantidad === 0) return;\n        //De lo contrario se disminuye\n        todosProductos[i].cantidad--;\n        //Almacenarlo en el state\n        guardarProductos(todosProductos);\n\n    }\n\n    const aumentarProductos = i => {\n        //Copiar el arreglo original de productos\n        const todosProductos = [...productos];\n        //Incremento\n        todosProductos[i].cantidad++;\n        //Almacenarlo en el state\n        guardarProductos(todosProductos);\n\n    }\n\n    //Elimina un producto del state\n    const eliminaProductoPedido = id => {\n        //!== Elimina el elemento del array\n        const todosProductos = productos.filter(producto => producto.producto !== id);\n        guardarProductos(todosProductos);\n    }\n    //Actualizar el total a pagar\n    const actualizarTotal = () => {\n        //Si el arreglo de productos es igual 0: el total es 0\n        if (productos.length === 0) {\n            guardarTotal(0);\n            return;\n        }\n\n        //Calcular el nuevo total\n        let nuevoTotal = 0;\n        //Recorrer todos los productos, sus cantidades y precios\n        productos.map(producto => nuevoTotal += (producto.cantidad * producto.precio));\n        //Almacena el total\n        guardarTotal(nuevoTotal);\n    }\n\n    //Almacena el pedido en la Base de Datos\n    const realizarPedido = async e => {\n        e.preventDefault();\n\n        //Construir el objeto\n        const pedido = {\n            \"cliente\": id, //Está arriba como una constante\n            \"pedido\": productos,\n            \"total\": total\n        }\n        //Almacenarlo en la base de datos\n        const resultado = await clienteAxios.post(`/pedidos/nuevo/${id}`, pedido);\n\n        //Leer resultado\n        if (resultado.status === 200) {\n            //Alerta de todo bien\n            Swal.fire({\n                type: 'success',\n                title: 'Correcto',\n                text: resultado.data.mensaje,\n            })\n        } else {\n            //Alerta de error\n            Swal.fire({\n                type: 'error',\n                title: 'Hubo un error!',\n                text: 'Vuelva a Intentarlo',\n            })\n        }\n\n        //Redireccionar\n        navigate('/pedidos');\n    }\n\n    return (\n        <Fragment>\n            <h2>Nuevo Pedido</h2>\n\n            <div className=\"ficha-cliente\">\n                <h3>Datos de Cliente</h3>\n                <p>Nombre: {cliente.nombre} {cliente.apellido}</p>\n                <p>Teléfono: {cliente.telefono}</p>\n            </div>\n\n\n\n            <FormBuscarProducto\n                buscarProducto={buscarProducto}\n                leerDatosBusqueda={leerDatosBusqueda}\n            ></FormBuscarProducto>\n\n            <ul className=\"resumen\">\n                {productos.map((producto, index) => (\n                    <FormCantidadProducto\n                        key={producto.producto}\n                        producto={producto}\n                        restarProductos={restarProductos}\n                        aumentarProductos={aumentarProductos}\n                        eliminaProductoPedido={eliminaProductoPedido}\n                        index={index}\n                    ></FormCantidadProducto>\n                ))}\n\n\n            </ul>\n            <p className=\"total\">Total a Pagar:<span>${total}</span></p>\n\n\n            {total > 0 ? (\n                <form onSubmit={realizarPedido}>\n                    <input type=\"submit\" className=\"btn btn-verde btn-block\" value=\"Realizar Pedido\" />\n                </form>\n            ) : null}\n\n        </Fragment>\n    )\n};\n\nexport default NuevoProducto;","import React, { useContext, useState } from 'react';\n\nimport clienteAxios from '../../config/axios';\nimport Swal from 'sweetalert2';\nimport { useNavigate } from 'react-router-dom';\n\n//Import Context\nimport { CRMContext } from '../../context/CRMContext';\n\nconst Login = () => {\n    const navigate = useNavigate();\n    //state con los datos del form\n    const [credenciales, guardarCredenciales] = useState({});\n\n    //state auth y guardarAuth\n    const [auth, guardarAuth] = useContext(CRMContext);\n    console.log(auth)\n\n\n\n    //Iniciar Sesion en el servidor\n    const iniciarSesion = async e => {\n        e.preventDefault();\n\n        //Autenticar al usuario\n        try {\n\n            const respuesta = await clienteAxios.post('/iniciar-sesion', credenciales);\n\n            //Extraer el TOKEN y colocarlo en LocalStorage\n            const { token } = respuesta.data;\n            //Colocarlo en el state de Context\n            guardarAuth({\n                token,\n                auth: true\n            })\n            Swal.fire(\n                'Login Correcto',\n                'Has iniciado sesion',\n                'success'\n            );\n\n            //Redireccionar\n            navigate('/');\n\n        } catch (error) {\n            //console.log(error);\n\n            if (error.response) {\n                Swal.fire({\n                    type: 'error',\n                    title: 'Hubo un error',\n                    text: error.response.data.mensaje\n                });\n            } else {\n                Swal.fire({\n                    type: 'error',\n                    title: 'Hubo un error',\n                    text: 'Hubo un error '\n                });\n            }\n\n        }\n    }\n\n    //Almacenar lo que el usuario escribe en el state\n    const leerDatos = e => {\n        guardarCredenciales({\n            ...credenciales,\n            [e.target.name]: e.target.value\n        })\n    };\n\n\n    return (\n        <div className=\"login\">\n            <h2>Iniciar Sesión</h2>\n\n            <div className=\"contenedor-formulario\">\n                <form onSubmit={iniciarSesion}>\n                    <div className=\"campo\">\n                        <label>Email</label>\n                        <input\n                            type=\"text\"\n                            name=\"email\"\n                            placeholder=\"Email para iniciar sesion\"\n                            required\n                            onChange={leerDatos}></input>\n                    </div>\n                    <div className=\"campo\">\n                        <label>Password</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password  para iniciar sesion\"\n                            required\n                            onChange={leerDatos}></input>\n                    </div>\n                    <input type=\"submit\" value=\"Iniciar Sesión\" className=\"btn btn-verde btn-block\"></input>\n                </form>\n            </div>\n        </div>\n    )\n};\n\nexport default Login;","import React, { Fragment, useContext } from \"react\";\n\n/**Routing */\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n/**Layout */\nimport Header from \"./componentes/layout/Header\";\nimport Navegacion from \"./componentes/layout/Navegacion\";\n\n/**Componentes */\nimport Clientes from \"./componentes/clientes/Clientes\";\nimport NuevoCliente from \"./componentes/clientes/NuevoCliente\";\nimport EditarCliente from \"./componentes/clientes/EditarCliente\";\n\nimport Productos from \"./componentes/productos/Productos\";\nimport EditarProducto from \"./componentes/productos/EditarProducto\";\nimport NuevoProducto from \"./componentes/productos/NuevoProducto\";\n\nimport Pedidos from \"./componentes/pedidos/Pedidos\";\nimport NuevoPedido from \"./componentes/pedidos/NuevoPedido\";\nimport Login from \"./componentes/auth/Login\";\n\n/**Import Context */\nimport { CRMContext, CRMProvider } from \"./context/CRMContext\";\n\n\n\n\nconst App = () => {\n\n  //Utilizar Context en el componente\n  const [auth, guardarAuth] = useContext(CRMContext);\n\n  console.log(process.env.REACT_APP_BACKEND_URL);\n\n  return (\n    <Router>\n      <Fragment>\n        <CRMProvider value={[auth, guardarAuth]}>\n          <Header></Header>\n          <div className=\"grid contenedor contenido-principal\">\n            <Navegacion></Navegacion>\n            <main className=\"caja-contenido col-9\">\n              {/*Todo: Routing a diferentes componentes*/}\n              <Routes>\n                {/*With Elemement*/}\n                <Route exact path='/' element={<Clientes />}></Route>\n                <Route exact path='/clientes/nuevo' element={<NuevoCliente />}></Route>\n                <Route exact path='/clientes/editar/:id' element={<EditarCliente />}></Route>\n\n                <Route exact path='/productos' element={<Productos />}></Route>\n                <Route exact path='/productos/nuevo' element={<NuevoProducto />}></Route>\n                <Route exact path='/productos/editar/:id' element={<EditarProducto />}></Route>\n\n\n\n                <Route exact path='/pedidos' element={<Pedidos />}></Route>\n                <Route exact path='/pedidos/nuevo/:id' element={<NuevoPedido />}></Route>\n                {/*With Component*/}\n\n                <Route exact path='/iniciar-sesion' element={<Login />}></Route>\n\n              </Routes>\n            </main>\n          </div>\n        </CRMProvider>\n      </Fragment>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}